{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","Boolean","window","location","hostname","match","rootElement","document","getElementById","hasChildNodes","hydrate","StrictMode","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sNA6GeA,MArGf,WACE,OAAO,wDCGWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZN,IAAMC,EAAcC,SAASC,eAAe,QACxCF,EAAYG,gBACdC,kBACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,GAGFM,iBACE,kBAAC,IAAMD,WAAP,KACE,kBAAC,EAAD,OAEFL,GDgHE,kBAAmBO,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9f60798e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n// import { Menu } from \"./components/Menu\";\n// import { Hero } from \"./components/Hero\";\n// import { ContentSection } from \"./components/ContentSection\";\n// import { Employees } from \"./components/Employees\";\n// import { Footer } from \"./components/Footer\";\n\nfunction App() {\n  return <h1>Síða í vinnslu</h1>;\n  // return (\n  //   <>\n  //     <Menu />\n  //     <Hero />\n  //     <ContentSection title=\"Um Fyrirtækið\">\n  //       <p>\n  //         Teknik er fyrirtæki sem samanstendur af sérfræðingum með áratuga\n  //         reynslu á sviði ráðgjafar, hönnunar, verkefnastjórnunar og eftirliti.\n  //         Lögð er áhersla á góða þjónustu við viðskiptavini og virðisaukandi\n  //         ráðgjöf.\n  //       </p>\n  //       <p>\n  //         Hönnuðir Teknik eru sérhæfðir í öllu sem tengist hönnun pípulagna,\n  //         loftræsikerfa og vatnsúðakerfa. Þeir hafa komið að ráðgjöf, hönnun og\n  //         eftirliti við stór og smá verkefni, innanlands og erlendis.\n  //       </p>\n  //       <p>\n  //         Teknik getur veitt heildstæða ráðgjöf við allt sem viðkemur\n  //         byggingaframkvæmdum í samvinnu við reynslumikla samstarfsaðila.\n  //       </p>\n  //     </ContentSection>\n  //     <ContentSection title=\"Þjónusta\">\n  //       <p>\n  //         Meðal verkefna sem starfsmenn Teknik hafa komið að eru einbýlis- og\n  //         fjölbýlishús, atvinnu- og iðnaðarhúsnæði, skólabyggingar,\n  //         íþróttamannvirki, hjúkrunarheimili ásamt ýmsum verkefnum í stóriðju.\n  //       </p>\n  //       <ul>\n  //         <li>Úttektir og ástandsmat</li>\n  //         <li>Kostnaðaráætlanir</li>\n  //         <li>Hönnun</li>\n  //         <li>Útboðsgögn</li>\n  //         <li>Verkeftirlit</li>\n  //       </ul>\n  //       <h3>Loftræsing</h3>\n  //       <p>\n  //         Hitastig og loftgæði í byggingum hafa áhrif á afköst, vellíðan og\n  //         heilsu notenda. Með góðri ráðgjöf má ná fram endingarbetri\n  //         loftræsikerfum, lægri rekstrarkostnaði og betri innivist í byggingum.\n  //       </p>\n  //       <p>\n  //         Ráðgjöfin felur í sér útreikninga á loftgæðum og kostnaðarmat\n  //         mismunandi útfærslna á fyrstu stigum hönnunar til að styðja við\n  //         ákvarðanatöku og val á lausnum.\n  //       </p>\n  //       <p>\n  //         Teknik býður jafnframt upp á þarfagreiningu, ráðgjöf og hönnun vegna\n  //         úrbóta og stækkunar á eldri loftræsikerfum:\n  //       </p>\n  //       <ul>\n  //         <li>Loftgæðamælingar og ráðgjöf vegna innivistar</li>\n  //         <li>Hermanir á loftgæðum og hitastigi í byggingum</li>\n  //         <li>Hönnun loftræsikerfa fyrir allar gerðir mannvirkja</li>\n  //         <li>Orkuútreikningar fyrir byggingar</li>\n  //         <li>Útreikningar á orkuramma samkvæmt reglugerð</li>\n  //       </ul>\n  //       <h3>Pípulagnir</h3>\n  //       <p>\n  //         Með góðri ráðgjöf má ná fram endingarbetri lagnakerfum, lægri\n  //         rekstrarkostnaði og betri innivist í byggingum.\n  //       </p>\n  //       <p>\n  //         Lögð er áhersla á að vinna með arkitekt og verkkaupa á fyrstu stigum\n  //         verkefnis, aðstoða við ákvarðanatöku og gera kostnaðar- og gæðamat á\n  //         mismunandi lausnum.\n  //       </p>\n  //       <p>\n  //         Teknik býður jafnframt upp á þarfagreiningu, ráðgjöf og hönnun vegna\n  //         úrbóta og stækkunar á eldri lagnakerfum:\n  //       </p>\n  //       <ul>\n  //         <li>Hitakerfi</li>\n  //         <li>Snjóbræðslukerfi</li>\n  //         <li>Neysluvatnskerfi</li>\n  //         <li>Vatnsúðakerfi</li>\n  //         <li>Frárennsliskerfi</li>\n  //         <li>Kæli- og frystikerfi</li>\n  //         <li>Sundlaugakerfi</li>\n  //         <li>Varmadælukerfi fyrir hús og sumarbústaði</li>\n  //       </ul>\n  //       <h3>Hönnunarstjórn og verkeftirlit</h3>\n  //       <p>\n  //         Teknik tekur að sér að aðstoða við undirbúning, skipulagningu og\n  //         áætlanagerð verkefna ásamt eftirliti með öllum þáttum verkefnisins á\n  //         framkvæmdatíma:\n  //       </p>\n  //       <ul>\n  //         <li>Forhönnun</li>\n  //         <li>Kostnaðaráætlanir</li>\n  //         <li>Gerð útboðsgagna</li>\n  //         <li>Verkeftirlit</li>\n  //       </ul>\n  //     </ContentSection>\n  //     <Employees />\n  //     <Footer />\n  //   </>\n  // );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { render, hydrate } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    rootElement\n  );\n} else {\n  render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    rootElement\n  );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}